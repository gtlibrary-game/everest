version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile-backend
    volumes:
      - ./:/app/code  # Mount the backend directory to the container for live-reloading
      - static_volume:/app/code/static  # Dedicated volume for Django static files
      - media_volume:/app/code/media    # Dedicated volume for Django media files
    ports:
      - "8000:8000"
    environment:
      - DEBUG=1  # Assuming you have a DEBUG environment variable in your Django settings
    command: conda run --no-capture-output -p /app/env /app/env/bin/python manage.py runserver 0.0.0.0:8000

  frontend:
    build:
      context: ./frontend
      dockerfile: ../Dockerfile-frontend
    volumes:
      - ./frontend:/app  # Mount the frontend directory to the container for live-reloading
      - /app/node_modules  # Keep node_modules on an anonymous volume
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
    command: npm start

  autotrain:
    build:
      context: ./autotrain-advanced
      dockerfile: Dockerfile
    volumes:
      - ./autotrain-advanced:/app/code  # Mount the frontend directory to the container for live-reloading
      - ./autotrain-advanced/temp:/tmp
    ports:
      - "8080:8080"
    user: "root"
    environment:
      - HF_TOKEN=${HF_TOKEN}
    #command: conda run --no-capture-output -p /app/env /app/env/bin/autotrain app --port 8080 --host 0.0.0.0
    command: bash -c "conda run --no-capture-output -p /app/env /app/env/bin/pip install -e . && conda run --no-capture-output -p /app/env /app/env/bin/autotrain app --port 8080 --host 0.0.0.0"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              capabilities: [gpu]

  autoreply:
    build:
      context: ./autotrain-advanced
      dockerfile: Dockerfile
    volumes:
      - ./autotrain-advanced/autoreply:/app/code  # Mount the frontend directory to the container for live-reloading
      - ./autotrain-advanced/temp:/tmp
    ports:
      - "8001:8001"
    user: "root"
    environment:
      - HF_TOKEN=${HF_TOKEN}
    #command: conda run --no-capture-output -p /app/env /app/env/bin/autotrain app --port 8080 --host 0.0.0.0
    command: conda run --no-capture-output -p /app/env /app/env/bin/uvicorn app:app --host 0.0.0.0 --port 8001 --reload
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              capabilities: [gpu]

volumes:
  static_volume:
  media_volume:
